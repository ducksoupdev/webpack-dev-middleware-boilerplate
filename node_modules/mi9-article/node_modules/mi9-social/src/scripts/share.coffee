q = require 'q'

class Share
    @templates:
        share: require '../templates/share'

    constructor: (@http) ->
        # Note: http should be configured to parse as json
        throw new Error 'Share: Needs RequestCache' unless @http

    facebook: (url) ->
        params = q: "SELECT total_count FROM link_stat WHERE url=\"#{url}\""
        path = 'https://graph.facebook.com/fql'
        @http {url: path, query: params}
            .then (body) ->
                body.data[0].total_count
            .fail (err) ->
                throw new Error "Facebook API Error - #{err}"

    twitter: (url) ->
        path = 'https://cdn.api.twitter.com/1/urls/count.json'
        params = url: url
        @http {url: path, query: params}
            .then (body) ->
                body.count
            .fail (err) ->
                throw new Error "Twitter API Error - #{err}"

    linkedin: (url) ->
        path = 'http://www.linkedin.com/countserv/count/share'
        params = format: 'json', url: url
        @http {url: path, query: params}
            .then (body) ->
                body.count
            .fail (err) ->
                throw new Error "Linkedin API Error - #{err}"

    get: (url) ->
        q.allSettled [
            @facebook url
            @twitter url
            @linkedin url
        ]
        .spread (fa, tw, li) ->
            # Check fullfillment status
            faCount = if fa.state is 'fulfilled' then fa.value else 0
            twCount = if tw.state is 'fulfilled' then tw.value else 0
            liCount = if li.state is 'fulfilled' then li.value else 0

            facebook: faCount
            twitter: twCount
            linkedin: liCount
            total: faCount + twCount + liCount

module.exports = Share
