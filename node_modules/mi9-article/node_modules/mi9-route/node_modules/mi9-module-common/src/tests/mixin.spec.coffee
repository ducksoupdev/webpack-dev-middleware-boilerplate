Mixin = require '../scripts/mixin'

describe 'Mixin', ->
    context '.extend', ->
        it 'injects the static properties from another class into the current class', ->
            class Helper
                @staticVariable: 'Static Variable'
                @staticMethod: ->
                    return 'Static Method'

                instanceVariable: 'Instance Variable'

            class TestMixin extends Mixin
                @extend Helper

            expect(TestMixin.staticVariable).to.equal('Static Variable')
            expect(TestMixin.staticMethod()).to.equal('Static Method')
            expect(TestMixin.prototype.instanceVariable).to.be.undefined

    context '.include', ->
        it 'injects the instance properties from another class into the current class prototype', ->
            class Helper
                @staticVariable: 'Static Variable'

                instanceVariable: 'Instance Variable'

            class TestMixin extends Mixin
                @include Helper

            expect(TestMixin.staticVariable).to.be.undefined
            expect(TestMixin.prototype.instanceVariable).to.equal('Instance Variable')

    context '.defineGetter', ->
        it 'creates a new instance property with the given name and binds a getter function', ->
            TestMixin = class extends Mixin
                constructor: ->
                    @_mySecret = 'sssssh'
                @defineGetter 'newProp', ->
                    return @_mySecret

            test = new TestMixin()
            expect(test.newProp).to.equal('sssssh')


    context '.defineSetter', ->
        it 'creates a new instance property with the given name and binds a setter function', ->
            class TestMixin extends Mixin
                @defineGetter 'newProp', ->
                    return @_mySecret
                @defineSetter 'newProp', (value) ->
                    @_mySecret = value

            test = new TestMixin()
            test.newProp = 'Dont sssh me!'
            expect(test.newProp).to.equal('Dont sssh me!')
