{
  "name": "mi9-module-common",
  "version": "2.0.0",
  "description": "This is the base class every `mi9` module should inherit from This class brings in `mixins` and `dependency injections` features to all modules",
  "repository": {
    "type": "git",
    "url": "git+https://stash.9msn.net/scm/mod/mi9-module-common.git"
  },
  "main": "build/lib/server/module.js",
  "devDependencies": {
    "coffee-loader": "^0.7.2",
    "coffee-script": "^1.9.3",
    "coffeelint": "^1.10.1",
    "coffeelint-loader": "^0.1.1",
    "lodash": "^3.10.0",
    "node-libs-browser": "^0.5.2",
    "stats-webpack-plugin": "^0.2.1",
    "webpack": "^1.10.1"
  },
  "gitHead": "982ba8603ead91db6a89efc956def9e0c6757f3c",
  "readme": "# Mi9 Module Class\nThis is the base class every `mi9` module should inherit from\nThis class brings in `mixins` and `dependency injections` features to all modules\n\n## Mixins\n\n###### Usage example\n\n```coffee\nModule = require 'mi9-module'\n\nclass MyHelper\n    @staticHelper: ->\n        console.log 'Static helper'\n\n    instanceHelper: ->\n        console.log 'Instance helper'\n\nclass MyModule extends Module\n    @extend MyHelper  # Adds the static methods from MyHelper class into MyModule\n    @include MyHelper # Adds the instance methods from MyHelper class into MyModule\n\n    constructor: ->\n        _private: 'secret'\n\n    moduleMethod: ->\n        console.log 'Module method'\n\nMyModule.staticHelper()     # prints - Static helper\nmyModule = new MyModule()\nmyModule.instanceHelper()   # prints - Instance helper\nmyModule.moduleMethod()     # prints - Module method\n\n```\n\n## Dependency Injector\n\n###### Usage example in an mi9 npm module \n\n* Define dependencies\n\n`npm - mi9-demo-module`\n```coffee\nModule = require 'mi9-module'\n\nclass DemoModule extends Module\n    @dependencies {\n        config: new @Dependency 'Environment config'\n    }\n\n    constructor: ->\n        @config.server.connect()\n\nmodule.exports = DemoModule\n```\n\n* Register dependencies\n\nInject the dependencies to the `mi9-demo-module` from the project\n\n`file: dependencies.coffee`\n\n```coffee\nDemoModule = require  'mi9-demo-module'\n\nDemoModule.registerDependencies {\n    config: require('mi9-environment').get()\n}\n```\n\n* Connect with the app\n\n`file: app.coffee`\n```coffee\nrequire './dependencies'\n\nexpress = require 'express'\n....\n```\n\n### Notes\n##### Dependency Injector\n* All mi9 modules should extend from the `Module (mi9-module)` class\n* The dependencies method should be passed with an object holding pairs of key and instance of `Class.Dependency`\n * The key would be made available as an instance variable once the dependencies are injected.\n* Unmet dependencies would throw an error at runtime. eg \n```\nError: [Dependency]: Unmet dependency some module\n```\n* The current dependency injector forces all the dependencies to be injected at once and not partially\n* Extraneous dependencies will be silently ignored.\n\n",
  "readmeFilename": "README.md",
  "_id": "mi9-module-common@2.0.0",
  "_shasum": "02109333be087944f73a1e9a00abca5c5b215eea",
  "_from": "git+https://stash.9msn.net/scm/mod/mi9-module-common.git#2.0.0",
  "_resolved": "git+https://stash.9msn.net/scm/mod/mi9-module-common.git#982ba8603ead91db6a89efc956def9e0c6757f3c"
}
