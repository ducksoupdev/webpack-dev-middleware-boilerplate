module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!**********************************!*\
  !*** ./src/scripts/index.coffee ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(/*! ./route */ 1);


/***/ },
/* 1 */
/*!**********************************!*\
  !*** ./src/scripts/route.coffee ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	var Module, Route, _,
	  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
	  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
	  hasProp = {}.hasOwnProperty,
	  slice = [].slice;
	
	_ = __webpack_require__(/*! lodash */ 2);
	
	Module = __webpack_require__(/*! mi9-module-common */ 3);
	
	Route = (function(superClass) {
	  extend(Route, superClass);
	
	  Route.route = function(req, res, next) {
	    return new this(req, res, next);
	  };
	
	  Route._route = function() {
	    var args;
	    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
	    return this.route.apply(this, args);
	  };
	
	  Route.asRoute = function() {
	    return this._route.bind(this);
	  };
	
	  Route.prototype.asRoute = function() {
	    return (function(_this) {
	      return function(req, res, next) {
	        _this.req = req;
	        _this.res = res;
	        _this.next = next;
	        return _this.render();
	      };
	    })(this);
	  };
	
	  function Route() {
	    var args, ref;
	    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
	    this.asRoute = bind(this.asRoute, this);
	    if (this.constructor.caller === this.constructor.route) {
	      this._isRoute = true;
	      this.req = args[0], this.res = args[1], this.next = args[2];
	      this._render = ((ref = this.constructor.caller) != null ? ref.caller : void 0) === this.constructor._route ? true : false;
	      if (!this._render) {
	        if (typeof this.init === "function") {
	          this.init();
	        }
	      } else {
	        this.render(typeof this.init === "function" ? this.init() : void 0);
	      }
	    } else {
	      this._isRoute = false;
	      if (typeof this.init === "function") {
	        this.init.apply(this, args);
	      }
	    }
	  }
	
	  Route.prototype.isRoute = function() {
	    return this._isRoute;
	  };
	
	  Route.prototype.render = function() {
	    throw new Error("`render` method not implemented in `" + this.constructor.name + "` route");
	  };
	
	  return Route;
	
	})(Module);
	
	module.exports = Route;


/***/ },
/* 2 */
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },
/* 3 */
/*!************************************!*\
  !*** external "mi9-module-common" ***!
  \************************************/
/***/ function(module, exports) {

	module.exports = require("mi9-module-common");

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL21pOS1yb3V0ZS93ZWJwYWNrL2Jvb3RzdHJhcCA3M2NiZjVkMzFkNTg5ZWQ1NWEwZCIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL21pOS1yb3V0ZS8uL3NyYy9zY3JpcHRzL2luZGV4LmNvZmZlZSIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL21pOS1yb3V0ZS8uL3NyYy9zY3JpcHRzL3JvdXRlLmNvZmZlZSIsIndlYnBhY2s6Ly8vbm9kZV9tb2R1bGVzL21pOS1yb3V0ZS9leHRlcm5hbCBcImxvZGFzaFwiIiwid2VicGFjazovLy9ub2RlX21vZHVsZXMvbWk5LXJvdXRlL2V4dGVybmFsIFwibWk5LW1vZHVsZS1jb21tb25cIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7Ozs7QUN0Q0EsT0FBTSxDQUFDLE9BQVAsR0FBaUIsb0JBQVEsZ0JBQVI7Ozs7Ozs7Ozs7QUNBakI7R0FBQTs7Ozs7QUFBQSxLQUFJLG9CQUFRLGVBQVI7O0FBQ0osVUFBUyxvQkFBUSwwQkFBUjs7QUFFSDs7O0dBR0YsS0FBQyxNQUFELEdBQVEsU0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLElBQVg7WUFBd0IsU0FBRSxHQUFGLEVBQU8sR0FBUCxFQUFZLElBQVo7R0FBeEI7O0dBRVIsS0FBQyxPQUFELEdBQVM7QUFBYTtLQUFaO1lBQVksSUFBQyxNQUFELGFBQU8sSUFBUDtHQUFiOztHQUVULEtBQUMsUUFBRCxHQUFVO1lBQUcsSUFBQyxPQUFNLENBQUMsSUFBUixDQUFhLElBQWI7R0FBSDs7bUJBRVYsVUFBUztZQUNMO2NBQUEsU0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLElBQVg7U0FDSSxLQUFDLElBQUQsR0FBTztTQUNQLEtBQUMsSUFBRCxHQUFPO1NBQ1AsS0FBQyxLQUFELEdBQVE7Z0JBQ1IsS0FBQyxPQUFEO09BSko7S0FBQTtHQURLOztHQVNJO0FBQ1Q7S0FEVTs7S0FDVixJQUFHLElBQUMsWUFBVyxDQUFDLE1BQWIsS0FBdUIsSUFBQyxZQUFXLENBQUMsS0FBdkM7T0FDSSxJQUFDLFNBQUQsR0FBWTtPQUNYLElBQUMsY0FBRixFQUFPLElBQUMsY0FBUixFQUFhLElBQUM7T0FDZCxJQUFDLFFBQUQsaURBQWlDLENBQUUsZ0JBQXJCLEtBQStCLElBQUMsWUFBVyxDQUFDLE1BQS9DLEdBQTJELElBQTNELEdBQXFFO09BQ2hGLEtBQU8sSUFBQyxRQUFSOztXQUFxQixJQUFDO1VBQXRCO1FBQUE7U0FBbUMsSUFBQyxPQUFELG1DQUFRLElBQUMsZ0JBQVQsRUFBbkM7UUFKSjtNQUFBO09BTUksSUFBQyxTQUFELEdBQVk7O1NBQ1osSUFBQyxrQkFBTTtRQVBYOztHQURTOzttQkFXYixVQUFTO1lBQUcsSUFBQztHQUFKOzttQkFFVCxTQUFRO0FBQUcsV0FBVSxVQUFNLHlDQUF1QyxJQUFDLFlBQVcsQ0FBQyxJQUFwRCxHQUF5RCxTQUEvRDtHQUFiOzs7O0lBL0JROztBQWlDcEIsT0FBTSxDQUFDLE9BQVAsR0FBaUI7Ozs7Ozs7Ozs7QUNwQ2pCLG9DOzs7Ozs7Ozs7QUNBQSwrQyIsImZpbGUiOiJsaWIvbW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrL2Jvb3RzdHJhcCA3M2NiZjVkMzFkNTg5ZWQ1NWEwZFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSAnLi9yb3V0ZSdcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vY29mZmVlbGludC1sb2FkZXIhLi9zcmMvc2NyaXB0cy9pbmRleC5jb2ZmZWVcbiAqKi8iLCJfID0gcmVxdWlyZSAnbG9kYXNoJ1xuTW9kdWxlID0gcmVxdWlyZSAnbWk5LW1vZHVsZS1jb21tb24nXG5cbmNsYXNzIFJvdXRlIGV4dGVuZHMgTW9kdWxlXG5cbiAgICAjIENhbGwgdGhpcyBzdGF0aWMgZmFjdG9yeSBtZXRob2QgZGlyZWN0bHkgdG8gdGVzdCB0aGUgcm91dGVzLCBpbnN0ZWFkIG9mIHRoZSBgbmV3IENsYXNzYCBjb25zdHJ1Y3QuXG4gICAgQHJvdXRlOiAocmVxLCByZXMsIG5leHQpIC0+IG5ldyBAKHJlcSwgcmVzLCBuZXh0KVxuXG4gICAgQF9yb3V0ZTogKGFyZ3MuLi4pIC0+IEByb3V0ZShhcmdzLi4uKVxuXG4gICAgQGFzUm91dGU6IC0+IEBfcm91dGUuYmluZCh0aGlzKVxuXG4gICAgYXNSb3V0ZTogPT5cbiAgICAgICAgKHJlcSwgcmVzLCBuZXh0KSA9PlxuICAgICAgICAgICAgQHJlcSA9IHJlcVxuICAgICAgICAgICAgQHJlcyA9IHJlc1xuICAgICAgICAgICAgQG5leHQgPSBuZXh0XG4gICAgICAgICAgICBAcmVuZGVyKClcblxuICAgICMgVGhlIG5ldyBpbnN0YW5jZSBpbW1lZGlhdGVseSBpbnZva2VzIHRoZSByZW5kZXIgbWV0aG9kLCB3aGVuIHJlZ2lzdGVyZWQgYGFzUm91dGVgXG4gICAgIyBXZSBoYXZlIGhpamFja2VkIHRoZSBjb25zdHJ1Y3RvciBoZXJlLCBoZW5jZSB0aGUgaW5pdCBtZXRob2QgKGlmIGRlZmluZWQpIHdvdWxkIGJlaGF2ZSBsaWtlIGEgY29uc3RydWN0b3JcbiAgICBjb25zdHJ1Y3RvcjogKGFyZ3MuLi4pIC0+XG4gICAgICAgIGlmIEBjb25zdHJ1Y3Rvci5jYWxsZXIgaXMgQGNvbnN0cnVjdG9yLnJvdXRlXG4gICAgICAgICAgICBAX2lzUm91dGUgPSB0cnVlXG4gICAgICAgICAgICBbQHJlcSwgQHJlcywgQG5leHRdID0gYXJnc1xuICAgICAgICAgICAgQF9yZW5kZXIgPSBpZiBAY29uc3RydWN0b3IuY2FsbGVyPy5jYWxsZXIgaXMgQGNvbnN0cnVjdG9yLl9yb3V0ZSB0aGVuIHRydWUgZWxzZSBmYWxzZVxuICAgICAgICAgICAgdW5sZXNzIEBfcmVuZGVyIHRoZW4gQGluaXQ/KCkgZWxzZSBAcmVuZGVyKEBpbml0PygpKVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBAX2lzUm91dGUgPSBmYWxzZVxuICAgICAgICAgICAgQGluaXQ/KGFyZ3MuLi4pXG5cbiAgICAjIFJlcG9ydCBpZiBpbnN0YW5jZSBpcyByZWdpc3RlcmVkIGBhc1JvdXRlYFxuICAgIGlzUm91dGU6IC0+IEBfaXNSb3V0ZVxuXG4gICAgcmVuZGVyOiAtPiB0aHJvdyBuZXcgRXJyb3IgXCJgcmVuZGVyYCBtZXRob2Qgbm90IGltcGxlbWVudGVkIGluIGAje0Bjb25zdHJ1Y3Rvci5uYW1lfWAgcm91dGVcIlxuXG5tb2R1bGUuZXhwb3J0cyA9IFJvdXRlXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL34vY29mZmVlbGludC1sb2FkZXIhLi9zcmMvc2NyaXB0cy9yb3V0ZS5jb2ZmZWVcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImxvZGFzaFwiXG4gKiogbW9kdWxlIGlkID0gMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibWk5LW1vZHVsZS1jb21tb25cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIm1pOS1tb2R1bGUtY29tbW9uXCJcbiAqKiBtb2R1bGUgaWQgPSAzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9